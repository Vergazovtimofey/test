@function pow($number, $exp) {
  $exp1: round($exp);
  $result: powInt($number, $exp1);

  @if ($exp1 != $exp) {
    $result: $result * mathExp(($exp - $exp1) * mathLn($number));
  }

  @return $result;
}

@function powInt($number, $exp) {
  @if $exp == 0 {
    @return 1;
  } @else if $exp < 0 {
    @return 1 / powInt($number, -$exp);
  } @else {
    $e: floor($exp / 2);
    $pow: pow($number, $e);
    @if $e * 2 == $exp {
      @return $pow * $pow;
    } @else {
      @return $pow * $pow * $number;
    }
  }
}

@function mathExp($value) {
  $item: 1;
  $result: 1;

  @for $index from 1 to 100 {
    $item: $item * $value / $index;
    $result: $result + $item;
  }

  @return $result;
}

@function mathLn($value) {
  $tenExp: 0;
  $lnTen: 2.30258509;

  @while ($value > 1) {
    $tenExp: $tenExp + 1;
    $value: $value / 10;
  }

  $item: -1;
  $result: 0;

  @for $index from 1 to 100 {
    $item: $item * (1 - $value);
    $result: $result + $item / $index;
  }

  @return $result + $tenExp * $lnTen;
}
